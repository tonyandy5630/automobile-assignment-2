@using BusinessObject
@using DataAccess.Repository
@model BusinessObject.OrderObject
@using eStore.Controllers.Utils
@{
    const string MEMBER_KEY = "Member";
    MemberObject member = SessionExtensionsUtils.GetObjectFromJson<MemberObject>(Context.Session, MEMBER_KEY);
}
@{
    ViewData["Title"] = "Delete";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@{
    ViewData["Title"] = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
    MemberRepository memberRepository = new MemberRepository();
    IEnumerable<MemberObject> memberList = memberRepository.GetMembers();
}


@if (member != null && member.MemberId == 1)
{
    <h1>Edit</h1>

    <h4>@ViewBag.Message</h4>
    <hr />
    <div class="row">
        <div class="col-md-4">
            <form asp-action="Edit">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <div class="form-group">
                    <label asp-for="OrderId" class="control-label"></label>
                    <input asp-for="OrderId" class="form-control" readonly />
                    <span asp-validation-for="OrderId" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label class="control-label">Member Email</label>
                    @*<input asp-for="MemberId" class="form-control" />*@
                    <select name="MemberId" id="MemberId">
                        @foreach (MemberObject _member in memberList)
                        {
                            if (Model.MemberId == _member.MemberId)
                            {
                                <option value="@_member.MemberId" selected="selected">@_member.Email</option>
                            }
                            else
                            {
                                <option value="@_member.MemberId">@_member.Email</option>
                            }

                        }
                    </select>
                    <span asp-validation-for="MemberId" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="OrderDate" class="control-label"></label>
                    <input asp-for="OrderDate" class="form-control" />
                    <span asp-validation-for="OrderDate" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="RequiredDate" class="control-label"></label>
                    <input asp-for="RequiredDate" class="form-control" />
                    <span asp-validation-for="RequiredDate" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="ShippedDate" class="control-label"></label>
                    <input asp-for="ShippedDate" class="form-control" />
                    <span asp-validation-for="ShippedDate" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Freight" class="control-label"></label>
                    <input asp-for="Freight" class="form-control" />
                    <span asp-validation-for="Freight" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <input type="submit" value="Save" class="btn btn-primary" />
                </div>
            </form>
        </div>
    </div>

    <div>
        <a asp-action="Index">Back to List</a>
    </div>

    @section Scripts {
    @{
            await Html.RenderPartialAsync("_ValidationScriptsPartial");
        }
        }
}
else
{
    <h3>This page just for admin</h3>
}

